package com.taylorzhangyx.bugtracker.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TicketAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketAllPropertiesEquals(Ticket expected, Ticket actual) {
        assertTicketAutoGeneratedPropertiesEquals(expected, actual);
        assertTicketAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketAllUpdatablePropertiesEquals(Ticket expected, Ticket actual) {
        assertTicketUpdatableFieldsEquals(expected, actual);
        assertTicketUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketAutoGeneratedPropertiesEquals(Ticket expected, Ticket actual) {
        assertThat(expected)
            .as("Verify Ticket auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketUpdatableFieldsEquals(Ticket expected, Ticket actual) {
        assertThat(expected)
            .as("Verify Ticket relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getDueDate()).as("check dueDate").isEqualTo(actual.getDueDate()))
            .satisfies(e -> assertThat(e.getDone()).as("check done").isEqualTo(actual.getDone()))
            .satisfies(e -> assertThat(e.getNewEntity()).as("check newEntity").isEqualTo(actual.getNewEntity()))
            .satisfies(e -> assertThat(e.getSomeInfo()).as("check someInfo").isEqualTo(actual.getSomeInfo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketUpdatableRelationshipsEquals(Ticket expected, Ticket actual) {
        assertThat(expected)
            .as("Verify Ticket relationships")
            .satisfies(e -> assertThat(e.getProject()).as("check project").isEqualTo(actual.getProject()))
            .satisfies(e -> assertThat(e.getLabels()).as("check labels").isEqualTo(actual.getLabels()));
    }
}
